#!/bin/bash

VERSION=$1
TAG="v$VERSION"
BRANCH_NAME="release/$TAG"
DIST_DIR="dist"
TEMP_DIR="temp-release"

# Ki·ªÉm tra version
if [ -z "$VERSION" ]; then
  echo "‚ùå B·∫°n ph·∫£i truy·ªÅn v√†o version. V√≠ d·ª•: ./release.sh 1.0.1"
  exit 1
fi

# Ki·ªÉm tra clean working tree
if [ -n "$(git status --porcelain)" ]; then
  echo "‚ùå Working tree kh√¥ng s·∫°ch. H√£y commit/stash tr∆∞·ªõc khi release."
  exit 1
fi

# Build
echo "üî® Build d·ª± √°n..."
npm run build

# Ki·ªÉm tra dist
if [ ! -d "$DIST_DIR" ]; then
  echo "‚ùå Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c dist."
  exit 1
fi

# T·∫°o git tag
git tag "$TAG"
git push origin "$TAG"

# ƒê·∫©y n·ªôi dung dist l√™n nh√°nh release/vX.X.X
echo "üöÄ ƒê·∫©y n·ªôi dung $DIST_DIR l√™n nh√°nh $BRANCH_NAME"

rm -rf "$TEMP_DIR"
mkdir "$TEMP_DIR"
cp -r "$DIST_DIR"/* "$TEMP_DIR"/
echo "$TAG" > "$TEMP_DIR/version.txt"

cd "$TEMP_DIR"
git init
git checkout -b "$BRANCH_NAME"
git remote add origin "$(git config --get remote.origin.url)"
git add .
git commit -m "Release $TAG"
git push -f origin "$BRANCH_NAME"
cd ..
rm -rf "$TEMP_DIR"

# In URL t·∫°o GitHub Release
REPO_URL=$(git config --get remote.origin.url)
REPO_URL=${REPO_URL%.git}
REPO_URL=${REPO_URL/git@github.com:/https:\/\/github.com\/}

echo "‚úÖ ƒê√£ t·∫°o tag $TAG v√† nh√°nh $BRANCH_NAME"
echo "üì§ T·∫°o GitHub Release t·∫°i:"
echo "üîó $REPO_URL/releases/new?tag=$TAG"
